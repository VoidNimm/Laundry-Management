generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model tb_detail_transaksi {
  id           Int          @id @default(autoincrement())
  id_transaksi Int
  id_paket     Int
  qty          Float?       @default(1)
  keterangan   String?
  created_at   DateTime?    @default(now()) @db.Timestamptz(6)
  tb_paket     tb_paket     @relation(fields: [id_paket], references: [id], onUpdate: NoAction, map: "fk_detail_transaksi_paket")
  tb_transaksi tb_transaksi @relation(fields: [id_transaksi], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_detail_transaksi_transaksi")
}

model tb_member {
  id            Int                 @id @default(autoincrement())
  nama          String              @db.VarChar(100)
  alamat        String?
  jenis_kelamin jenis_kelamin_enum?
  tlp           String?             @db.VarChar(15)
  created_at    DateTime?           @default(now()) @db.Timestamptz(6)
  tb_transaksi  tb_transaksi[]
}

model tb_outlet {
  id           Int            @id @default(autoincrement())
  nama         String         @db.VarChar(100)
  alamat       String?
  tlp          String?        @db.VarChar(15)
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  tb_paket     tb_paket[]
  tb_transaksi tb_transaksi[]
  tb_user      tb_user[]
}

model tb_paket {
  id                  Int                   @id @default(autoincrement())
  id_outlet           Int
  jenis               jenis_paket_enum
  nama_paket          String                @db.VarChar(100)
  harga               Int                   @default(0)
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  tb_detail_transaksi tb_detail_transaksi[]
  tb_outlet           tb_outlet             @relation(fields: [id_outlet], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_paket_outlet")
}

model tb_transaksi {
  id                  Int                    @id @default(autoincrement())
  id_outlet           Int
  kode_invoice        String                 @unique @db.VarChar(100)
  id_member           Int?
  tgl                 DateTime               @default(now()) @db.Timestamptz(6)
  batas_waktu         DateTime?              @db.Timestamptz(6)
  tgl_bayar           DateTime?              @db.Timestamptz(6)
  biaya_tambahan      Int?                   @default(0)
  diskon              Float?                 @default(0)
  pajak               Int?                   @default(0)
  status              status_transaksi_enum? @default(baru)
  dibayar             status_bayar_enum?     @default(belum_dibayar)
  id_user             Int?
  created_at          DateTime?              @default(now()) @db.Timestamptz(6)
  tb_detail_transaksi tb_detail_transaksi[]
  tb_member           tb_member?             @relation(fields: [id_member], references: [id], onUpdate: NoAction, map: "fk_transaksi_member")
  tb_outlet           tb_outlet              @relation(fields: [id_outlet], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_transaksi_outlet")
  tb_user             tb_user?               @relation(fields: [id_user], references: [id], onUpdate: NoAction, map: "fk_transaksi_user")

  @@index([id_outlet], map: "idx_transaksi_outlet")
}

model tb_user {
  id           Int            @id @default(autoincrement())
  nama         String         @db.VarChar(100)
  username     String         @unique @db.VarChar(30)
  password     String
  id_outlet    Int?
  role         role_enum      @default(kasir)
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  tb_transaksi tb_transaksi[]
  tb_outlet    tb_outlet?     @relation(fields: [id_outlet], references: [id], onUpdate: NoAction, map: "fk_user_outlet")
}

enum jenis_kelamin_enum {
  L
  P
}

enum jenis_paket_enum {
  kiloan
  selimut
  bed_cover
  kaos
  lain
}

enum role_enum {
  admin
  kasir
  owner
}

enum status_bayar_enum {
  dibayar
  belum_dibayar
}

enum status_transaksi_enum {
  baru
  proses
  selesai
  diambil
}
