generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model logs {
  id         Int      @id @default(autoincrement())
  user_id    Int?
  action     String?  @db.VarChar(100)
  details    String?  @db.Text
  created_at DateTime @default(now()) @db.Timestamp(0)
}

model tb_detail_transaksi {
  id           Int          @id @default(autoincrement())
  id_transaksi Int
  id_paket     Int
  qty          Float?       @default(1)
  keterangan   String?      @db.Text
  created_at   DateTime     @default(now()) @db.Timestamp(0)
  tb_transaksi tb_transaksi @relation(fields: [id_transaksi], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "tb_detail_transaksi_ibfk_1")
  tb_paket     tb_paket     @relation(fields: [id_paket], references: [id], onUpdate: Restrict, map: "tb_detail_transaksi_ibfk_2")

  @@index([id_paket], map: "id_paket")
  @@index([id_transaksi], map: "id_transaksi")
}

model tb_member {
  id            Int                      @id @default(autoincrement())
  nama          String                   @db.VarChar(100)
  alamat        String?                  @db.Text
  jenis_kelamin tb_member_jenis_kelamin?
  tlp           String?                  @db.VarChar(15)
  created_at    DateTime                 @default(now()) @db.Timestamp(0)
  tb_transaksi  tb_transaksi[]
}

model tb_outlet {
  id           Int            @id @default(autoincrement())
  nama         String         @db.VarChar(100)
  alamat       String?        @db.Text
  tlp          String?        @db.VarChar(15)
  created_at   DateTime       @default(now()) @db.Timestamp(0)
  tb_paket     tb_paket[]
  tb_transaksi tb_transaksi[]
  tb_user      tb_user[]
}

model tb_paket {
  id                  Int                   @id @default(autoincrement())
  id_outlet           Int
  jenis               tb_paket_jenis
  nama_paket          String                @db.VarChar(100)
  harga               Int                   @default(0)
  created_at          DateTime              @default(now()) @db.Timestamp(0)
  tb_detail_transaksi tb_detail_transaksi[]
  tb_outlet           tb_outlet             @relation(fields: [id_outlet], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "tb_paket_ibfk_1")

  @@index([id_outlet], map: "id_outlet")
}

model tb_transaksi {
  id                  Int                   @id @default(autoincrement())
  id_outlet           Int
  kode_invoice        String                @unique(map: "kode_invoice") @db.VarChar(100)
  id_member           Int?
  tgl                 DateTime              @default(now()) @db.DateTime(0)
  batas_waktu         DateTime?             @db.DateTime(0)
  tgl_bayar           DateTime?             @db.DateTime(0)
  biaya_tambahan      Int?                  @default(0)
  diskon              Float?                @default(0)
  pajak               Int?                  @default(0)
  status              tb_transaksi_status?  @default(baru)
  dibayar             tb_transaksi_dibayar? @default(belum_dibayar)
  id_user             Int?
  created_at          DateTime              @default(now()) @db.Timestamp(0)
  tb_detail_transaksi tb_detail_transaksi[]
  tb_outlet           tb_outlet             @relation(fields: [id_outlet], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "tb_transaksi_ibfk_1")
  tb_member           tb_member?            @relation(fields: [id_member], references: [id], onUpdate: Restrict, map: "tb_transaksi_ibfk_2")
  tb_user             tb_user?              @relation(fields: [id_user], references: [id], onUpdate: Restrict, map: "tb_transaksi_ibfk_3")

  @@index([id_member], map: "id_member")
  @@index([id_user], map: "id_user")
  @@index([kode_invoice], map: "idx_transaksi_kode")
  @@index([id_outlet], map: "idx_transaksi_outlet")
}

model tb_user {
  id           Int            @id @default(autoincrement())
  nama         String         @db.VarChar(100)
  username     String         @unique(map: "username") @db.VarChar(30)
  password     String         @db.Text
  id_outlet    Int?
  role         tb_user_role   @default(kasir)
  created_at   DateTime       @default(now()) @db.Timestamp(0)
  tb_transaksi tb_transaksi[]
  tb_outlet    tb_outlet?     @relation(fields: [id_outlet], references: [id], onUpdate: Restrict, map: "tb_user_ibfk_1")

  @@index([id_outlet], map: "id_outlet")
}

enum tb_paket_jenis {
  kiloan
  selimut
  bed_cover
  kaos
  lain
}

enum tb_member_jenis_kelamin {
  L
  P
}

enum tb_user_role {
  admin
  kasir
  owner
}

enum tb_transaksi_status {
  baru
  proses
  selesai
  diambil
}

enum tb_transaksi_dibayar {
  dibayar
  belum_dibayar
}

model BusinessRecap {
  outletId      Int
  date          DateTime
  dailyRevenue  Int
  monthlyRevenue Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt

  @@id([outletId, date])
  @@index([outletId])
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}
